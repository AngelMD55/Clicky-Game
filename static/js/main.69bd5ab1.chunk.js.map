{"version":3,"sources":["components/Counter/Counter.js","components/Navbar/Navbar.js","components/Jumbotron/Jumbotron.js","components/ImageCard/ImageCard.js","components/Footer/Footer.js","App.js","index.js"],"names":["Counter","react_default","a","createElement","this","props","count","highScore","React","Component","Navbar","className","style","position","width","zIndex","backgroundColor","components_Counter_Counter","Jumbotron","imageStyle","height","border","borderStyle","borderColor","margin","curson","ImageCard","alt","name","id","src","image","onClick","incrementCounter","Footer","padding","href","App","state","characters","selectedIds","handleIncrement","_this","setState","matched","includes","alert","onClearArray","randomPics","pushIds","renderHighestScore","concat","Object","toConsumableArray","pictures","i","length","j","Math","floor","random","_ref","_this2","Navbar_Navbar","paddingTop","Jumbotron_Jumbotron","display","color","map","character","ImageCard_ImageCard","Footer_Footer","ReactDOM","render","src_App_0","document","getElementById"],"mappings":"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","file":"static/js/main.69bd5ab1.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nclass Counter extends React.Component {\r\n\r\n    render() {\r\n        return (\r\n        <div>\r\n            <h3>Score: {this.props.count} | Top Score: {this.props.highScore} </h3>\r\n        </div>\r\n    );\r\n    };\r\n};\r\n\r\nexport default Counter; ","import React from 'react';\r\nimport Counter from \"../Counter/Counter\";\r\n\r\nfunction Navbar(props) {\r\n    return (\r\n        <nav className=\"navbar p-3\" style={{ position: \"fixed\", width: \"100%\", zIndex: \"99\", backgroundColor: \"goldenrod\"}}>\r\n            <div className=\"col-4\">\r\n                <h3>Clicky Game!</h3>\r\n            </div>\r\n            <div className=\"col-4\">\r\n                <h3>Click an image to begin!</h3>\r\n            </div>\r\n            <div className=\"col-4\">\r\n                <Counter count={props.count} \r\n                    highScore = {props.highScore}\r\n                />\r\n            </div>\r\n        </nav>\r\n    );\r\n};\r\n\r\nexport default Navbar;","import React from 'react';\r\nimport \"./style.css\";\r\n\r\nfunction Jumbotron() {\r\n    return (\r\n        <div className=\"jumbotron jumbotron-fluid\">\r\n            <div className=\"container\">\r\n                <h1 className=\"display-4\">Clicky Game!</h1>\r\n                <p className=\"lead\">Click on an image to earn points, but don't click on any more than once!</p>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Jumbotron;","import React from 'react';\r\n\r\nfunction ImageCard(props) {\r\n    return (\r\n        <div >\r\n            <img alt={props.name} id={props.id} src={props.image} style={imageStyle} onClick={props.incrementCounter} />\r\n        </div>\r\n    );\r\n};\r\n\r\nconst imageStyle = {\r\n    width: \"185px\",\r\n    height: \"185px\",\r\n    border: \"5px\",\r\n    borderStyle: \"double\",\r\n    borderColor: \"goldenrod\",\r\n    margin: \"8px 25px\",\r\n    curson: \"pointer\"\r\n};\r\n\r\nexport default ImageCard;\r\n","import React from 'react'\r\n\r\n function Footer() {\r\n  return (\r\n    <footer style={{backgroundColor: \"goldenrod\", padding:\"8px\"}}>\r\n      <p className=\"font-weight-bold\">Â©Angel Demerutis | <a href=\"https://github.com/AngelMD55\">Github</a></p>\r\n    </footer>\r\n  );\r\n};\r\n\r\nexport default Footer;\r\n","import React, { Component } from 'react';\nimport Navbar from \"./components/Navbar/Navbar\";\nimport Jumbotron from \"./components/Jumbotron/Jumbotron\";\nimport ImageCard from \"./components/ImageCard/ImageCard\";\nimport Footer from \"./components/Footer/Footer\";\nimport characters from \"./characters.json\";\nimport './App.css';\n\n//App component \nclass App extends Component {\n\n  state = {\n    characters,\n    count: 0,\n    selectedIds: [],\n    highScore: 0\n  };\n\n  //handles increment for the Counter component.\n  handleIncrement = (id) => {\n    this.setState({ count: this.state.count + 1 }, () => {\n\n      let matched = (this.state.selectedIds).includes(id);\n      let count = (this.state.count)\n      if (count === 12){\n        alert(\"You Win!!!\")\n      }\n\n      if (matched) {\n        this.setState({ count: 0 });\n        this.onClearArray();\n        this.randomPics();\n        alert(\"You lose!!! Play again\")\n\n      } else {\n        this.pushIds(id);\n        this.renderHighestScore();\n        this.randomPics();\n      };\n    });\n  };\n\n  // Sets the highest score.\n  renderHighestScore = () => {\n    if (this.state.count >= this.state.highScore) {\n      this.setState({ highScore: this.state.count });\n    };\n  };\n\n  //clear array of selectedIds when someone hits the same image more than once. \n  onClearArray = () => {\n    this.setState({ selectedIds: [] });\n  };\n\n  //pushes the image id to an array of selected images.\n  pushIds = (id) => {\n    this.setState({ selectedIds: [...this.state.selectedIds, id] });\n  };\n\n  // shuffles the images \n  randomPics() {\n    let pictures = this.state.characters;\n\n    for (let i = pictures.length - 1; i > 0; i--) {\n      const j = Math.floor(Math.random() * (i + 1));\n      [pictures[i], pictures[j]] = [pictures[j], pictures[i]];\n    };\n    this.setState({ characters: pictures });\n    return pictures;\n  };\n\n  render() {\n    return (\n      <div className=\"App\">\n        <div>\n          <Navbar count={this.state.count}\n            highScore={this.state.highScore}\n          />\n        </div>\n        <div style={{ paddingTop: \"73px\" }}>\n          <Jumbotron />\n          <p id=\"lost\" style={{ display: \"none\", color:\"red\" }}>You lose!! please try again</p>\n          <p id=\"win\" style={{ display: \"none\", color: \"red\" }}>You win!!!</p>\n        </div>\n        <div className=\"container\">\n          <div id=\"imgContainer\" className=\"justify-content-center align-self-center\">\n            {this.state.characters.map(character => (\n              <ImageCard\n                image={character.image}\n                name={character.name}\n                id={character.id}\n                incrementCounter={() => this.handleIncrement(character.id)}\n              />\n            ))};\n          </div>\n        </div>\n        <Footer />\n      </div>\n\n    );\n  };\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n"],"sourceRoot":""}